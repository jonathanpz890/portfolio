import { Box } from '@mui/material'
import React, { useEffect, useRef, useState } from 'react'
import { animated, useScroll } from '@react-spring/web'
import { useStyle } from './WaveTransition.style'

export const WaveTransition = () => {
    const [offsetTop, setOffsetTop] = useState(0)
    const [screenScroll, setScreenScroll] = useState(0)
    const style = useStyle()
    const transitionRef = useRef<HTMLElement>(null as any)

    const { scrollYProgress } = useScroll({
        config: {
            tension: 0
        }
    })

    useEffect(() => {
        const waves = transitionRef.current.getBoundingClientRect();
        setOffsetTop((waves.top + window.scrollY) - window.innerHeight)
        const body = document.body;
        const html = document.documentElement;
        const height = Math.max(body.scrollHeight, body.offsetHeight,
            html.clientHeight, html.scrollHeight, html.offsetHeight);
        setScreenScroll(height)
    }, [])
    return (
        <Box style={style.waveTransition} ref={transitionRef}>
            <animated.div
                style={{
                    width: '200vw',
                    display: 'flex',
                    flexDirection: 'column',
                    backgroundColor: '#cce0f0',
                    position: 'relative',
                    left: scrollYProgress.to(val => {
                        const y = offsetTop - (val * (screenScroll - window.innerHeight))
                        const vwRatio = (window.innerHeight + 50) / 25
                        return `${y / vwRatio > 0 ? 0 : y / vwRatio < -100 ? -100 : y / vwRatio}vw`
                    }),
                }}
            >
                {/* #95bfde #cce0f0 */}
                <svg style={style.wave} id="visual" viewBox="0 0 3000 100" width="3000" height="100" xmlns="http://www.w3.org/2000/svg"  version="1.1"><path d="M0 99L16.2 82.5C32.3 66 64.7 33 97 28.2C129.3 23.3 161.7 46.7 193.8 47.8C226 49 258 28 290.2 32.2C322.3 36.3 354.7 65.7 387 69.7C419.3 73.7 451.7 52.3 484 41.2C516.3 30 548.7 29 580.8 40.2C613 51.3 645 74.7 677.2 80.2C709.3 85.7 741.7 73.3 774 58.3C806.3 43.3 838.7 25.7 871 26C903.3 26.3 935.7 44.7 968 53.2C1000.3 61.7 1032.7 60.3 1064.8 62.3C1097 64.3 1129 69.7 1161.2 67.5C1193.3 65.3 1225.7 55.7 1258 47.3C1290.3 39 1322.7 32 1355 40.8C1387.3 49.7 1419.7 74.3 1451.8 73.7C1484 73 1516 47 1548.2 37.3C1580.3 27.7 1612.7 34.3 1645 36.5C1677.3 38.7 1709.7 36.3 1742 34.5C1774.3 32.7 1806.7 31.3 1838.8 38.3C1871 45.3 1903 60.7 1935.2 65.5C1967.3 70.3 1999.7 64.7 2032 66.8C2064.3 69 2096.7 79 2129 70.8C2161.3 62.7 2193.7 36.3 2226 30.8C2258.3 25.3 2290.7 40.7 2322.8 54.2C2355 67.7 2387 79.3 2419.2 79.5C2451.3 79.7 2483.7 68.3 2516 57.7C2548.3 47 2580.7 37 2613 28.8C2645.3 20.7 2677.7 14.3 2709.8 16.8C2742 19.3 2774 30.7 2806.2 42.2C2838.3 53.7 2870.7 65.3 2903 64.7C2935.3 64 2967.7 51 2983.8 44.5L3000 38L3000 101L2983.8 101C2967.7 101 2935.3 101 2903 101C2870.7 101 2838.3 101 2806.2 101C2774 101 2742 101 2709.8 101C2677.7 101 2645.3 101 2613 101C2580.7 101 2548.3 101 2516 101C2483.7 101 2451.3 101 2419.2 101C2387 101 2355 101 2322.8 101C2290.7 101 2258.3 101 2226 101C2193.7 101 2161.3 101 2129 101C2096.7 101 2064.3 101 2032 101C1999.7 101 1967.3 101 1935.2 101C1903 101 1871 101 1838.8 101C1806.7 101 1774.3 101 1742 101C1709.7 101 1677.3 101 1645 101C1612.7 101 1580.3 101 1548.2 101C1516 101 1484 101 1451.8 101C1419.7 101 1387.3 101 1355 101C1322.7 101 1290.3 101 1258 101C1225.7 101 1193.3 101 1161.2 101C1129 101 1097 101 1064.8 101C1032.7 101 1000.3 101 968 101C935.7 101 903.3 101 871 101C838.7 101 806.3 101 774 101C741.7 101 709.3 101 677.2 101C645 101 613 101 580.8 101C548.7 101 516.3 101 484 101C451.7 101 419.3 101 387 101C354.7 101 322.3 101 290.2 101C258 101 226 101 193.8 101C161.7 101 129.3 101 97 101C64.7 101 32.3 101 16.2 101L0 101Z" fill="#a7c8e4" stroke-linecap="round" stroke-linejoin="miter"></path></svg>
            </animated.div>
            <animated.div
                style={{
                    width: '200vw',
                    display: 'flex',
                    flexDirection: 'column',
                    backgroundColor: '#a7c8e4',
                    position: 'relative',
                    zIndex: 1,
                    right: '50vw'
                }}
            >
                <svg style={style.wave} id="visual" viewBox="0 0 3000 100" width="3000" height="100" xmlns="http://www.w3.org/2000/svg" version="1.1"><path d="M0 28L16.2 35C32.3 42 64.7 56 97 59.2C129.3 62.3 161.7 54.7 193.8 58.5C226 62.3 258 77.7 290.2 81.3C322.3 85 354.7 77 387 70C419.3 63 451.7 57 484 52.7C516.3 48.3 548.7 45.7 580.8 37.7C613 29.7 645 16.3 677.2 12C709.3 7.7 741.7 12.3 774 15C806.3 17.7 838.7 18.3 871 26.2C903.3 34 935.7 49 968 62C1000.3 75 1032.7 86 1064.8 85.3C1097 84.7 1129 72.3 1161.2 61C1193.3 49.7 1225.7 39.3 1258 30.2C1290.3 21 1322.7 13 1355 10.2C1387.3 7.3 1419.7 9.7 1451.8 9.8C1484 10 1516 8 1548.2 12.8C1580.3 17.7 1612.7 29.3 1645 32.8C1677.3 36.3 1709.7 31.7 1742 28.2C1774.3 24.7 1806.7 22.3 1838.8 28.5C1871 34.7 1903 49.3 1935.2 55.2C1967.3 61 1999.7 58 2032 56.3C2064.3 54.7 2096.7 54.3 2129 48.2C2161.3 42 2193.7 30 2226 26.2C2258.3 22.3 2290.7 26.7 2322.8 31.7C2355 36.7 2387 42.3 2419.2 50C2451.3 57.7 2483.7 67.3 2516 61.8C2548.3 56.3 2580.7 35.7 2613 24.7C2645.3 13.7 2677.7 12.3 2709.8 17.5C2742 22.7 2774 34.3 2806.2 46C2838.3 57.7 2870.7 69.3 2903 62C2935.3 54.7 2967.7 28.3 2983.8 15.2L3000 2L3000 101L2983.8 101C2967.7 101 2935.3 101 2903 101C2870.7 101 2838.3 101 2806.2 101C2774 101 2742 101 2709.8 101C2677.7 101 2645.3 101 2613 101C2580.7 101 2548.3 101 2516 101C2483.7 101 2451.3 101 2419.2 101C2387 101 2355 101 2322.8 101C2290.7 101 2258.3 101 2226 101C2193.7 101 2161.3 101 2129 101C2096.7 101 2064.3 101 2032 101C1999.7 101 1967.3 101 1935.2 101C1903 101 1871 101 1838.8 101C1806.7 101 1774.3 101 1742 101C1709.7 101 1677.3 101 1645 101C1612.7 101 1580.3 101 1548.2 101C1516 101 1484 101 1451.8 101C1419.7 101 1387.3 101 1355 101C1322.7 101 1290.3 101 1258 101C1225.7 101 1193.3 101 1161.2 101C1129 101 1097 101 1064.8 101C1032.7 101 1000.3 101 968 101C935.7 101 903.3 101 871 101C838.7 101 806.3 101 774 101C741.7 101 709.3 101 677.2 101C645 101 613 101 580.8 101C548.7 101 516.3 101 484 101C451.7 101 419.3 101 387 101C354.7 101 322.3 101 290.2 101C258 101 226 101 193.8 101C161.7 101 129.3 101 97 101C64.7 101 32.3 101 16.2 101L0 101Z" fill="#8bb7de" stroke-linecap="round" stroke-linejoin="miter"></path></svg>
            </animated.div>
            <animated.div
                style={{
                    width: '200vw',
                    display: 'flex',
                    flexDirection: 'column',
                    backgroundColor: '#8bb7de',
                    position: 'relative',
                    zIndex: 2,
                    right: scrollYProgress.to(val => {
                        const y = offsetTop - (val * (screenScroll - window.innerHeight))
                        const vwRatio = (window.innerHeight + 50) / 25
                        const finalRatio = (y / vwRatio) + 100
                        return `${finalRatio > 100 ? 100 : finalRatio < 0 ? 0 : finalRatio}vw`
                    }),
                }}
            >
                <svg style={style.wave} id="visual" viewBox="0 0 3000 100" width="3000" height="100" xmlns="http://www.w3.org/2000/svg" version="1.1"><path d="M0 94L16.2 90C32.3 86 64.7 78 97 71.5C129.3 65 161.7 60 193.8 63.8C226 67.7 258 80.3 290.2 78.3C322.3 76.3 354.7 59.7 387 47C419.3 34.3 451.7 25.7 484 25.7C516.3 25.7 548.7 34.3 580.8 47.8C613 61.3 645 79.7 677.2 78.8C709.3 78 741.7 58 774 58C806.3 58 838.7 78 871 72.7C903.3 67.3 935.7 36.7 968 28C1000.3 19.3 1032.7 32.7 1064.8 33C1097 33.3 1129 20.7 1161.2 19.8C1193.3 19 1225.7 30 1258 35.8C1290.3 41.7 1322.7 42.3 1355 48.8C1387.3 55.3 1419.7 67.7 1451.8 74.2C1484 80.7 1516 81.3 1548.2 68.8C1580.3 56.3 1612.7 30.7 1645 21.7C1677.3 12.7 1709.7 20.3 1742 25.5C1774.3 30.7 1806.7 33.3 1838.8 32.3C1871 31.3 1903 26.7 1935.2 25.5C1967.3 24.3 1999.7 26.7 2032 29.5C2064.3 32.3 2096.7 35.7 2129 46.5C2161.3 57.3 2193.7 75.7 2226 78.2C2258.3 80.7 2290.7 67.3 2322.8 52.5C2355 37.7 2387 21.3 2419.2 17.8C2451.3 14.3 2483.7 23.7 2516 38.5C2548.3 53.3 2580.7 73.7 2613 70C2645.3 66.3 2677.7 38.7 2709.8 29.5C2742 20.3 2774 29.7 2806.2 30.3C2838.3 31 2870.7 23 2903 31.3C2935.3 39.7 2967.7 64.3 2983.8 76.7L3000 89L3000 101L2983.8 101C2967.7 101 2935.3 101 2903 101C2870.7 101 2838.3 101 2806.2 101C2774 101 2742 101 2709.8 101C2677.7 101 2645.3 101 2613 101C2580.7 101 2548.3 101 2516 101C2483.7 101 2451.3 101 2419.2 101C2387 101 2355 101 2322.8 101C2290.7 101 2258.3 101 2226 101C2193.7 101 2161.3 101 2129 101C2096.7 101 2064.3 101 2032 101C1999.7 101 1967.3 101 1935.2 101C1903 101 1871 101 1838.8 101C1806.7 101 1774.3 101 1742 101C1709.7 101 1677.3 101 1645 101C1612.7 101 1580.3 101 1548.2 101C1516 101 1484 101 1451.8 101C1419.7 101 1387.3 101 1355 101C1322.7 101 1290.3 101 1258 101C1225.7 101 1193.3 101 1161.2 101C1129 101 1097 101 1064.8 101C1032.7 101 1000.3 101 968 101C935.7 101 903.3 101 871 101C838.7 101 806.3 101 774 101C741.7 101 709.3 101 677.2 101C645 101 613 101 580.8 101C548.7 101 516.3 101 484 101C451.7 101 419.3 101 387 101C354.7 101 322.3 101 290.2 101C258 101 226 101 193.8 101C161.7 101 129.3 101 97 101C64.7 101 32.3 101 16.2 101L0 101Z" fill="#70a7ce" stroke-linecap="round" stroke-linejoin="miter"></path></svg>
            </animated.div>
        </Box>
    )
}
