import { Box, useMediaQuery } from '@mui/material'
import React, { useEffect, useRef, useState } from 'react'
import { animated, useScroll } from '@react-spring/web'
import { useStyle } from './WaveTransition.style'

export const WaveTransition = ({
    darkMode
}: {
    darkMode: boolean;
}) => {
    const [offsetTop, setOffsetTop] = useState(0)
    const [screenScroll, setScreenScroll] = useState(0)

    const mobile = useMediaQuery('(max-width: 600px)')
    const style = useStyle()
    const transitionRef = useRef<HTMLElement | null>(null)

    const { scrollYProgress } = useScroll({
        config: {
            tension: 0
        }
    })

    useEffect(() => {
        const waves = transitionRef.current?.getBoundingClientRect();
        if (!waves) return;
        setOffsetTop((waves.top + window.scrollY) - window.innerHeight)
        const body = document.body;
        const html = document.documentElement;
        const height = Math.max(body.scrollHeight, body.offsetHeight,
            html.clientHeight, html.scrollHeight, html.offsetHeight);
        setScreenScroll(height)
    }, [])
    return (
        <Box style={style.waveTransition} ref={transitionRef}>
            <animated.div
                style={{
                    width: mobile ? '300vw' : '200vw',
                    display: 'flex',
                    flexDirection: 'column',
                    backgroundColor: darkMode ? '#315a75' : '#cce0f0',
                    transition: 'background-color 1s',
                    position: 'relative',
                    left: scrollYProgress.to(val => {
                        const y = offsetTop - (val * (screenScroll - window.innerHeight))
                        const vwRatio = (window.innerHeight + 50) / 50
                        return `${y / vwRatio > 0 ? 0 : y / vwRatio < -100 ? -100 : y / vwRatio}vw`
                    }),
                }}
            >
                {/* #95bfde #cce0f0 */}
                <svg style={style.svg} id="visual" viewBox="0 0 3000 100" width="3000" height="100" xmlns="http://www.w3.org/2000/svg" version="1.1"><path d="M0 53L16.2 53.8C32.3 54.7 64.7 56.3 97 60.3C129.3 64.3 161.7 70.7 193.8 66.5C226 62.3 258 47.7 290.2 49.3C322.3 51 354.7 69 387 71.5C419.3 74 451.7 61 484 47.7C516.3 34.3 548.7 20.7 580.8 13.7C613 6.7 645 6.3 677.2 18.5C709.3 30.7 741.7 55.3 774 56C806.3 56.7 838.7 33.3 871 30.2C903.3 27 935.7 44 968 43.8C1000.3 43.7 1032.7 26.3 1064.8 26.5C1097 26.7 1129 44.3 1161.2 46.8C1193.3 49.3 1225.7 36.7 1258 34C1290.3 31.3 1322.7 38.7 1355 49.2C1387.3 59.7 1419.7 73.3 1451.8 75.2C1484 77 1516 67 1548.2 54C1580.3 41 1612.7 25 1645 27.7C1677.3 30.3 1709.7 51.7 1742 55.5C1774.3 59.3 1806.7 45.7 1838.8 43.3C1871 41 1903 50 1935.2 45.3C1967.3 40.7 1999.7 22.3 2032 14.2C2064.3 6 2096.7 8 2129 13.5C2161.3 19 2193.7 28 2226 37C2258.3 46 2290.7 55 2322.8 64C2355 73 2387 82 2419.2 77.2C2451.3 72.3 2483.7 53.7 2516 54C2548.3 54.3 2580.7 73.7 2613 68.2C2645.3 62.7 2677.7 32.3 2709.8 23.8C2742 15.3 2774 28.7 2806.2 29.8C2838.3 31 2870.7 20 2903 16C2935.3 12 2967.7 15 2983.8 16.5L3000 18L3000 101L2983.8 101C2967.7 101 2935.3 101 2903 101C2870.7 101 2838.3 101 2806.2 101C2774 101 2742 101 2709.8 101C2677.7 101 2645.3 101 2613 101C2580.7 101 2548.3 101 2516 101C2483.7 101 2451.3 101 2419.2 101C2387 101 2355 101 2322.8 101C2290.7 101 2258.3 101 2226 101C2193.7 101 2161.3 101 2129 101C2096.7 101 2064.3 101 2032 101C1999.7 101 1967.3 101 1935.2 101C1903 101 1871 101 1838.8 101C1806.7 101 1774.3 101 1742 101C1709.7 101 1677.3 101 1645 101C1612.7 101 1580.3 101 1548.2 101C1516 101 1484 101 1451.8 101C1419.7 101 1387.3 101 1355 101C1322.7 101 1290.3 101 1258 101C1225.7 101 1193.3 101 1161.2 101C1129 101 1097 101 1064.8 101C1032.7 101 1000.3 101 968 101C935.7 101 903.3 101 871 101C838.7 101 806.3 101 774 101C741.7 101 709.3 101 677.2 101C645 101 613 101 580.8 101C548.7 101 516.3 101 484 101C451.7 101 419.3 101 387 101C354.7 101 322.3 101 290.2 101C258 101 226 101 193.8 101C161.7 101 129.3 101 97 101C64.7 101 32.3 101 16.2 101L0 101Z" fill={darkMode ? "#213d4f" : '#a7c8e4'} strokeLinecap="round" strokeLinejoin="miter" style={style.path}></path></svg>

            </animated.div>
            <animated.div
                style={{
                    width: mobile ? '300vw' : '200vw',
                    display: 'flex',
                    flexDirection: 'column',
                    backgroundColor: darkMode ? "#213d4f" : '#a7c8e4',
                    transition: 'background-color 1s',
                    position: 'relative',
                    zIndex: 1,
                    right: '50vw'
                }}
            >
                <svg style={style.svg} id="visual" viewBox="0 0 3000 100" width="3000" height="100" xmlns="http://www.w3.org/2000/svg" version="1.1"><path d="M0 52L16.2 45.3C32.3 38.7 64.7 25.3 97 28.8C129.3 32.3 161.7 52.7 193.8 58C226 63.3 258 53.7 290.2 48.8C322.3 44 354.7 44 387 46.3C419.3 48.7 451.7 53.3 484 51.2C516.3 49 548.7 40 580.8 43C613 46 645 61 677.2 59.5C709.3 58 741.7 40 774 29.5C806.3 19 838.7 16 871 21.8C903.3 27.7 935.7 42.3 968 45.2C1000.3 48 1032.7 39 1064.8 44.5C1097 50 1129 70 1161.2 78.2C1193.3 86.3 1225.7 82.7 1258 81.8C1290.3 81 1322.7 83 1355 70.2C1387.3 57.3 1419.7 29.7 1451.8 24.7C1484 19.7 1516 37.3 1548.2 46.8C1580.3 56.3 1612.7 57.7 1645 55.7C1677.3 53.7 1709.7 48.3 1742 54C1774.3 59.7 1806.7 76.3 1838.8 83C1871 89.7 1903 86.3 1935.2 84.8C1967.3 83.3 1999.7 83.7 2032 74.8C2064.3 66 2096.7 48 2129 39C2161.3 30 2193.7 30 2226 36.7C2258.3 43.3 2290.7 56.7 2322.8 66.7C2355 76.7 2387 83.3 2419.2 76.5C2451.3 69.7 2483.7 49.3 2516 45.2C2548.3 41 2580.7 53 2613 56.8C2645.3 60.7 2677.7 56.3 2709.8 55.5C2742 54.7 2774 57.3 2806.2 56.3C2838.3 55.3 2870.7 50.7 2903 40.8C2935.3 31 2967.7 16 2983.8 8.5L3000 1L3000 101L2983.8 101C2967.7 101 2935.3 101 2903 101C2870.7 101 2838.3 101 2806.2 101C2774 101 2742 101 2709.8 101C2677.7 101 2645.3 101 2613 101C2580.7 101 2548.3 101 2516 101C2483.7 101 2451.3 101 2419.2 101C2387 101 2355 101 2322.8 101C2290.7 101 2258.3 101 2226 101C2193.7 101 2161.3 101 2129 101C2096.7 101 2064.3 101 2032 101C1999.7 101 1967.3 101 1935.2 101C1903 101 1871 101 1838.8 101C1806.7 101 1774.3 101 1742 101C1709.7 101 1677.3 101 1645 101C1612.7 101 1580.3 101 1548.2 101C1516 101 1484 101 1451.8 101C1419.7 101 1387.3 101 1355 101C1322.7 101 1290.3 101 1258 101C1225.7 101 1193.3 101 1161.2 101C1129 101 1097 101 1064.8 101C1032.7 101 1000.3 101 968 101C935.7 101 903.3 101 871 101C838.7 101 806.3 101 774 101C741.7 101 709.3 101 677.2 101C645 101 613 101 580.8 101C548.7 101 516.3 101 484 101C451.7 101 419.3 101 387 101C354.7 101 322.3 101 290.2 101C258 101 226 101 193.8 101C161.7 101 129.3 101 97 101C64.7 101 32.3 101 16.2 101L0 101Z" fill={darkMode ? "#192e3c" : "#8bb7de"} strokeLinecap="round" strokeLinejoin="miter" style={style.path}></path></svg>

            </animated.div>
            <animated.div
                style={{
                    width: mobile ? '300vw' : '200vw',
                    display: 'flex',
                    flexDirection: 'column',
                    backgroundColor: darkMode ? "#192e3c" : "#8bb7de",
                    transition: 'background-color 1s',
                    position: 'relative',
                    zIndex: 2,
                    right: scrollYProgress.to(val => {
                        const y = offsetTop - (val * (screenScroll - window.innerHeight))
                        const vwRatio = (window.innerHeight + 50) / 50
                        const finalRatio = (y / vwRatio) + 100
                        return `${finalRatio > 100 ? 100 : finalRatio < 0 ? 0 : finalRatio}vw`
                    }),
                }}
            >
                <svg style={style.svg} id="visual" viewBox="0 0 3000 100" width="3000" height="100" xmlns="http://www.w3.org/2000/svg" version="1.1"><path d="M0 4L16.2 12.8C32.3 21.7 64.7 39.3 97 53.5C129.3 67.7 161.7 78.3 193.8 84.5C226 90.7 258 92.3 290.2 82C322.3 71.7 354.7 49.3 387 37.8C419.3 26.3 451.7 25.7 484 37.3C516.3 49 548.7 73 580.8 80.3C613 87.7 645 78.3 677.2 71.5C709.3 64.7 741.7 60.3 774 59.2C806.3 58 838.7 60 871 64.2C903.3 68.3 935.7 74.7 968 78.3C1000.3 82 1032.7 83 1064.8 76.7C1097 70.3 1129 56.7 1161.2 44C1193.3 31.3 1225.7 19.7 1258 24.8C1290.3 30 1322.7 52 1355 55.8C1387.3 59.7 1419.7 45.3 1451.8 41.8C1484 38.3 1516 45.7 1548.2 42C1580.3 38.3 1612.7 23.7 1645 23C1677.3 22.3 1709.7 35.7 1742 42.8C1774.3 50 1806.7 51 1838.8 58.7C1871 66.3 1903 80.7 1935.2 85.7C1967.3 90.7 1999.7 86.3 2032 72.5C2064.3 58.7 2096.7 35.3 2129 29.7C2161.3 24 2193.7 36 2226 45.2C2258.3 54.3 2290.7 60.7 2322.8 66.7C2355 72.7 2387 78.3 2419.2 79.2C2451.3 80 2483.7 76 2516 77.3C2548.3 78.7 2580.7 85.3 2613 77.3C2645.3 69.3 2677.7 46.7 2709.8 32.8C2742 19 2774 14 2806.2 19.5C2838.3 25 2870.7 41 2903 53.7C2935.3 66.3 2967.7 75.7 2983.8 80.3L3000 85L3000 101L2983.8 101C2967.7 101 2935.3 101 2903 101C2870.7 101 2838.3 101 2806.2 101C2774 101 2742 101 2709.8 101C2677.7 101 2645.3 101 2613 101C2580.7 101 2548.3 101 2516 101C2483.7 101 2451.3 101 2419.2 101C2387 101 2355 101 2322.8 101C2290.7 101 2258.3 101 2226 101C2193.7 101 2161.3 101 2129 101C2096.7 101 2064.3 101 2032 101C1999.7 101 1967.3 101 1935.2 101C1903 101 1871 101 1838.8 101C1806.7 101 1774.3 101 1742 101C1709.7 101 1677.3 101 1645 101C1612.7 101 1580.3 101 1548.2 101C1516 101 1484 101 1451.8 101C1419.7 101 1387.3 101 1355 101C1322.7 101 1290.3 101 1258 101C1225.7 101 1193.3 101 1161.2 101C1129 101 1097 101 1064.8 101C1032.7 101 1000.3 101 968 101C935.7 101 903.3 101 871 101C838.7 101 806.3 101 774 101C741.7 101 709.3 101 677.2 101C645 101 613 101 580.8 101C548.7 101 516.3 101 484 101C451.7 101 419.3 101 387 101C354.7 101 322.3 101 290.2 101C258 101 226 101 193.8 101C161.7 101 129.3 101 97 101C64.7 101 32.3 101 16.2 101L0 101Z" fill={darkMode ? "#101f28" : "#70a7ce"} strokeLinecap="round" strokeLinejoin="miter" style={style.path}></path></svg>
            </animated.div>
        </Box>
    )
}
